<module>
	<adapter name="HelloWorlds" active="${HelloWorlds.active}">
		<receiver
			name="HelloWorlds"
			className="nl.nn.adapterframework.receivers.GenericReceiver"
			>
			<listener
				name="HelloWorlds"
				className="nl.nn.adapterframework.receivers.JavaListener"
			/>
		</receiver>
		<pipeline firstPipe="CheckInputIsXml">
			<exits>
				<exit path="EXIT" state="success"/>
			</exits>
			<pipe
				name="CheckInputIsXml"
				className="nl.nn.adapterframework.pipes.XmlWellFormedChecker"
				>
				<forward name="success" path="HelloWorlds"/>
				<forward name="failure" path="Text2Xml"/>
			</pipe>
			<pipe
				name="Text2Xml"
				className="nl.nn.adapterframework.pipes.Text2XmlPipe"
				includeXmlDeclaration="false"
				xmlTag="tests"
				splitLines="true"
				>
				<forward name="success" path="RenameElementLineToTest"/>
			</pipe>
			<pipe
				name="RenameElementLineToTest"
				className="nl.nn.adapterframework.pipes.XsltPipe"
				styleSheetName="HelloWorlds/xsl/RenameElementLineToTest.xsl"
				>
				<forward name="success" path="CheckEmptyMessage"/>
			</pipe>
			<pipe
				name="CheckEmptyMessage"
				className="nl.nn.adapterframework.pipes.CompareStringPipe"
				>
				<param name="operand1" value="&lt;tests/>"/>
				<forward name="equals" path="CreateNewMessage"/>
				<forward name="lessthan" path="HelloWorlds"/>
				<forward name="greaterthan" path="HelloWorlds"/>
			</pipe>
			<pipe
				name="CreateNewMessage"
				className="nl.nn.adapterframework.pipes.FixedResult"
				returnString="&lt;tests>&lt;test>1&lt;/test>&lt;/tests>"
				>
				<forward name="success" path="HelloWorlds"/>
			</pipe>
			<pipe
				name="HelloWorlds"
				className="nl.nn.adapterframework.pipes.ForEachChildElementPipe"
				blockSize="3"
				blockPrefix="&lt;batch>"
				blockSuffix="&lt;/batch>"
				elementXPathExpression="/tests/test"
				>
				<sender
					className="nl.nn.adapterframework.senders.IbisLocalSender"
					javaListener="HelloWorld"
				/>
				<forward name="success" path="EXIT"/>
			</pipe>
		</pipeline>
	</adapter>
	<scheduler>
		<job
			name="HelloWorlds"
			adapterName="HelloWorlds"
			receiverName="HelloWorlds"
			cronExpression="0 55 2 * * ?"
			function="sendMessage"
			active="${HelloWorlds.active}"
		/>
		<!-- <job
			name="HelloWorlds"
			description="Interval test"
			adapterName="HelloWorlds"
			receiverName="HelloWorlds"
			interval="86340"
			function="sendMessage"
			active="${HelloWorlds.active}"
		/>
		<job
			name="HelloWorlds"
			description="Specific day test"
			adapterName="HelloWorlds"
			receiverName="HelloWorlds"
			cronExpression="59 59 23 ? * SUN"
			function="sendMessage"
			active="${HelloWorlds.active}"
		/>
		<job
			name="HelloWorlds"
			description="Duplicate test (1/3 - should not exist)"
			adapterName="HelloWorlds"
			receiverName="HelloWorlds"
			cronExpression="0 0 12 * * ?"
			function="sendMessage"
			active="${HelloWorlds.active}"
		/>
		<job
			name="HelloWorlds"
			description="Duplicate test (2/3 - should not exist)"
			adapterName="HelloWorlds"
			receiverName="HelloWorlds"
			cronExpression="0 0 12 * * ?"
			function="sendMessage"
			active="${HelloWorlds.active}"
		/>
		<job
			name="HelloWorlds"
			description="Duplicate test (3/3 - the right one)"
			adapterName="HelloWorlds"
			receiverName="HelloWorlds"
			cronExpression="0 0 15 * * ?"
			function="sendMessage"
			active="${HelloWorlds.active}"
		/>
		<job
			name="HelloWorlds"
			description="Pizza test"
			adapterName="HelloWorlds"
			receiverName="HelloWorlds"
			cronExpression="0 0 18 ? * 6L"
			function="sendMessage"
			active="${HelloWorlds.active}"
		/> -->
	</scheduler>
</module>
